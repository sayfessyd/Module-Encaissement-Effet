package com.pfe.model;
import java.beans.Transient;

/**
 * ContratCptId generated by MyEclipse - Hibernate Tools
 */
public class

ContratCptId implements java.io.Serializable, Cloneable, Comparable<ContratCptId> {

	// Fields

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long numCcptCcpt;
	private Long codStrcStrc;
	private Long codPrdPrd;
	public String compteClient;

	// Transient
	private String cle;

	// Constructors

	/** default constructor */
	public ContratCptId() {
	}

	/** full constructor */
	public ContratCptId(Long codStrcStrc, Long codPrdPrd, Long numCcptCcpt) {
		this.codStrcStrc = codStrcStrc;
		this.codPrdPrd = codPrdPrd;
		this.numCcptCcpt = numCcptCcpt;
	}
	
	@Override
	public int compareTo(ContratCptId cpt) {
		int result;
		result =  cpt.getCodStrcStrc().compareTo(this.getCodStrcStrc());
		if ( result == 0 ) {
	        result = cpt.getCodPrdPrd().compareTo(this.getCodPrdPrd());
	    }
		if ( result == 0 ) {
	        result = cpt.getNumCcptCcpt().compareTo(this.getNumCcptCcpt());
	    }
		return result;
	}
	
	// Property accessors

	public Long getNumCcptCcpt() {
		return this.numCcptCcpt;
	}

	public void setNumCcptCcpt(Long numCcptCcpt) {
		this.numCcptCcpt = numCcptCcpt;
	}

	public Long getCodStrcStrc() {
		return this.codStrcStrc;
	}

	public void setCodStrcStrc(Long codStrcStrc) {
		this.codStrcStrc = codStrcStrc;
	}

	public Long getCodPrdPrd() {
		return this.codPrdPrd;
	}

	public void setCodPrdPrd(Long codPrdPrd) {
		this.codPrdPrd = codPrdPrd;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof ContratCptId))
			return false;
		ContratCptId castOther = (ContratCptId) other;

		return ((this.getNumCcptCcpt() == castOther.getNumCcptCcpt()) || (this.getNumCcptCcpt() != null
				&& castOther.getNumCcptCcpt() != null && this.getNumCcptCcpt().equals(castOther.getNumCcptCcpt())))
				&& ((this.getCodStrcStrc() == castOther.getCodStrcStrc()) || (this.getCodStrcStrc() != null
						&& castOther.getCodStrcStrc() != null && this.getCodStrcStrc().equals(
						castOther.getCodStrcStrc())))
				&& ((this.getCodPrdPrd() == castOther.getCodPrdPrd()) || (this.getCodPrdPrd() != null
						&& castOther.getCodPrdPrd() != null && this.getCodPrdPrd().equals(castOther.getCodPrdPrd())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getNumCcptCcpt() == null ? 0 : this.getNumCcptCcpt().hashCode());
		result = 37 * result + (getCodStrcStrc() == null ? 0 : this.getCodStrcStrc().hashCode());
		result = 37 * result + (getCodPrdPrd() == null ? 0 : this.getCodPrdPrd().hashCode());
		return result;
	}

	public Object clone() {
		try {
			return super.clone();
		} catch (Exception e) {
			throw new InternalError(e.toString());
		}
	}

	public void setCle(String cle) {
		this.cle = cle;
	}

	@Transient
	public String getCle() {

		String[] montab =
				{ "A", "B", "C", "D", "F", "G", "H", "J", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "U", "V", "W",
						"X", "Y", "Z" };
		String structure = "";
		String produit = "";
		String numeroCompte = "";
		int tailleStrc = 0;
		int taillePrd = 0;
		int tailleCpt = 0;

		structure = "" + codStrcStrc;
		produit = "" + codPrdPrd;
		numeroCompte = "" + numCcptCcpt;

		tailleStrc = structure.length();
		for (int i = tailleStrc; i < 3; i++) {
			structure = "0" + structure;
		}

		taillePrd = produit.length();
		for (int i = taillePrd; i < 4; i++) {
			produit = "0" + produit;
		}

		tailleCpt = numeroCompte.length();
		for (int i = tailleCpt; i < 6; i++) {
			numeroCompte = "0" + numeroCompte;
		}

		String cle13 = structure + produit + numeroCompte;
		long cleLong = Long.valueOf(cle13).longValue() % 23;
		cle = montab[(int) cleLong];

		return cle;
	}

	public void setCompteClient(String compteClient) {
		this.compteClient = compteClient;
	}

	@Transient
	public String getCompteClient() {

		try {

			String codeStructure = "";
			String codeProduit = "";
			String numCcpt = "";
			int tailleStrc = 0;
			int taillePrd = 0;
			int tailleCpt = 0;
			if (getNumCcptCcpt() != null && getCodPrdPrd() != null && getCodStrcStrc() != null) {

				codeStructure = "" + getCodStrcStrc();
				codeProduit = "" + getCodPrdPrd();
				numCcpt = "" + getNumCcptCcpt();

				tailleStrc = codeStructure.length();
				for (int i = tailleStrc; i < 3; i++) {
					codeStructure = "0" + codeStructure;
				}

				taillePrd = codeProduit.length();
				for (int i = taillePrd; i < 4; i++) {
					codeProduit = "0" + codeProduit;
				}

				tailleCpt = numCcpt.length();
				for (int i = tailleCpt; i < 6; i++) {
					numCcpt = "0" + numCcpt;
				}

				compteClient = codeStructure + " " + codeProduit + " " + numCcpt;

			}
		} catch (Exception e) {

		}
		return compteClient;
	}

}
